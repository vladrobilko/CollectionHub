@using CollectionHub.Domain.Converters
@using CollectionHub.Models.Enums
@using Microsoft.AspNetCore.Html
@model CollectionHub.Models.ViewModels.ItemViewModel

@{
    ViewData["Title"] = "Item";
}

<div class="row justify-content-center">
    <div class="col-md-5">
        <h2 class="text-uppercase">@Model.AllHeadersWithValues["Name"].Values.FirstOrDefault()</h2>
        <p>@Model.AllHeadersWithValues["Tags"].Values.FirstOrDefault()</p>

        <div class="accordion">
            @RenderAccordionSection("Strings", Model.AllHeadersWithValues.Where(x => x.Key != "Name" && x.Key != "Tags" && x.Key.ToDataType() == DataType.String), "panelsStayOpen-collapseOne")
            @RenderAccordionSection("Integers", Model.AllHeadersWithValues.Where(x => x.Key.ToDataType() == DataType.Integer), "panelsStayOpen-collapseTwo")
            @RenderAccordionSection("Texts", Model.AllHeadersWithValues.Where(x => x.Key.ToDataType() == DataType.Text), "panelsStayOpen-collapseThree")
            @RenderAccordionSection("Bools", Model.AllHeadersWithValues.Where(x => x.Key.ToDataType() == DataType.Bool), "panelsStayOpen-collapseFour")
            @RenderAccordionSection("Dates", Model.AllHeadersWithValues.Where(x => x.Key.ToDataType() == DataType.Date), "panelsStayOpen-collapseFive")
        </div>

        <div class="p-4 d-flex align-items-center">
            <i class="fa-regular fa-comment" style="color: #0077cc;"></i>
            <span id="commentCount" class="ms-1">@Model.Comments.Count</span>

            <a href="@Url.Action("PressLike", "Item", new { itemId = Model.Id, collectionId = Model.CollectionId })" class="like-button ms-3">
                <i class="fa-regular fa-heart" style="color: #0077cc;"></i>
            </a>
            <span class="ms-1">@Model.Likes</span>
        </div>
        <div class="mb-5">
            <form method="post" asp-action="AddComment">
                <input type="hidden" name="itemId" value="@Model.Id" />
                <input type="hidden" name="collectionId" value="@Model.CollectionId" />

                <div class="d-flex flex-start w-100">
                    <div class="form-outline w-100">
                        <textarea class="form-control" name="text" rows="4" id="output" required></textarea>
                    </div>
                </div>
                <div class="float-end mt-2 pt-1">
                    <button type="submit" class="btn btn-primary btn-sm" onclick="setButtonPressedTrue();">@Localizer["addComment"]</button>
                </div>
            </form>
        </div>

        <h3>@Localizer["comments"]</h3>
        <div id="commentContainer">
            @if (Model.Comments != null && Model.Comments.Any())
            {
                @foreach (var comment in Model.Comments)
                {
                    <div class="card noHover">
                        <div class="card-body">
                            <div class="d-flex flex-start align-items-center">
                                <div>
                                    <h6 class="fw-bold text-primary mb-1">@comment.UserName</h6>
                                    <p class="text-muted small mb-0">@Localizer["posted"] @comment.Date.ToString("MMMM dd, yyyy h:mm tt")</p>
                                </div>
                            </div>
                            <p class="mt-3 mb-0 pb-2">@comment.Text</p>
                        </div>
                    </div>
                }
            }
        </div>

    </div>
</div>

@functions {
    IHtmlContent RenderAccordionSection(string title, IEnumerable<KeyValuePair<string, Dictionary<string, string>>> items, string collapseId)
    {
        var writer = new System.IO.StringWriter();

        if (items.Count() != 0)
        {
            <text>
                <div class="accordion-item">
                    <h2 class="accordion-header">
                        <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="@($"#{collapseId}")" aria-expanded="false" aria-controls="@collapseId">
                            @title
                        </button>
                    </h2>
                    <div id="@collapseId" class="accordion-collapse collapse" aria-labelledby="@($"#{collapseId}")">
                        <div class="accordion-body">
                            @foreach (var item in items)
                            {
                                <p><strong>@item.Value.Keys.FirstOrDefault():</strong> @item.Value.FirstOrDefault().Value</p>
                            }
                        </div>
                    </div>
                </div>
            </text>
        }

        return new HtmlString(writer.ToString());
    }
}

<script src="~/js/signalr/dist/browser/signalr.js"></script>

<script>
    var isButtonPressed = false;

    function clearTextarea() {
        $("#output").val("");
        isButtonPressed = false;
    }

    function setButtonPressedTrue() {
        isButtonPressed = true;
    }

    var connection = new signalR.HubConnectionBuilder().withUrl("/comments").build();

    connection.on("Receive", function (comment) {
        var formattedDate = new Intl.DateTimeFormat('en-US', {
            year: 'numeric',
            month: 'long',
            day: 'numeric',
            hour: 'numeric',
            minute: 'numeric',
            hour12: true
        }).format(new Date(comment.date));

        var commentContainer = document.getElementById("commentContainer");
        var newComment = document.createElement("div");

        newComment.className = "card noHover new-comment";
        newComment.innerHTML = `
                            <div class="card-body">
                                <div class="d-flex flex-start align-items-center">
                                    <div>
                                        <h6 class="fw-bold text-primary mb-1">${comment.userName}</h6>
                                        <p class="text-muted small mb-0">@Localizer["posted"] ${formattedDate}</p>
                                    </div>
                                </div>
                                <p class="mt-3 mb-0 pb-2">${comment.text}</p>
                            </div>
                        `;
        commentContainer.insertBefore(newComment, commentContainer.firstChild);

        var commentCountSpan = document.getElementById("commentCount");
        var currentCommentCount = parseInt(commentCountSpan.innerText);
        commentCountSpan.innerText = currentCommentCount + 1;

        if (isButtonPressed == true) {
            clearTextarea();
        }
    });

    connection.start().then(function () {
        connection.invoke("JoinGroup", "Item_@Model.Id");
    }).catch(function (err) {
        return console.error(err.toString());
    });
</script>